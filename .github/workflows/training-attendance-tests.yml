name: Training Attendance Test
on: 
  push:
    paths:
      - 'training-attendance/**'
  pull_request:
    paths:
      - 'training-attendance/**'
permissions:
  contents: read
jobs:
  main:
    name: Run linters and tests
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CFDDB_HOST: ${{ secrets.CFDDB_HOST}}
      CFDDB_PASSWORD: ${{ secrets.CFDDB_PASSWORD}}
      TRAINING_TABLE: ${{ secrets.TRAINING_TABLE}}
      FIREFIGHTER_TABLE: ${{ secrets.FIREFIGHTER_TABLE}}
      ATTENDANCE_TABLE: ${{ secrets.ATTENDANCE_TABLE}}
      TZ: ${{ secrets.TZ}}
      LOCAL_TZ: ${{ secrets.LOCAL_TZ}}
      R_VERSION: '4.4.1'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          path: training-attendance # Ensure the repo is checked out into the `training-attendance` directory

      - name: List files in `training-attendance` directory
        run: |
          echo "Listing `training-attendance` directory contents:"
          ls -l training-attendance
          echo "Listing `training-attendance` directory contents recursively:"
          ls -lR training-attendance

      - name: Check for renv.lock file
        run: |
          if [ -f training-attendance/renv.lock ]; then echo "renv.lock exists"; else echo "renv.lock does not exist"; fi

      - name: View renv.lock contents
        run: |
          cat training-attendance/renv.lock
        continue-on-error: true

      - name: Extract R version from lockfile
        run: printf 'R_VERSION=%s\n' "$(jq --raw-output .R.Version renv.lock)" >> $GITHUB_ENV

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.1'

      - name: Setup system dependencies
        run: >
          sudo apt-get update && sudo apt-get install --yes
          libcurl4-openssl-dev

      - name: Restore renv from cache
        uses: actions/cache@v2
        env:
          CACHE_KEY: renv-${{ runner.arch }}-${{ runner.os }}-${{ env.R_VERSION }}
        with:
          path: renv/library
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ env.CACHE_KEY }}-

      - name: Sync renv with lockfile
        shell: Rscript {0}
        run: |
          options(renv.config.cache.symlinks = FALSE)
          renv::restore(clean = TRUE)

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      # - name: Lint R
      #   if: always()
      #   shell: Rscript {0}
      #   run: rhino::lint_r()

      - name: Lint JavaScript
        if: always()
        shell: Rscript {0}
        run: rhino::lint_js()

      - name: Lint Sass
        if: always()
        shell: Rscript {0}
        run: rhino::lint_sass()

      - name: Build JavaScript
        if: always()
        shell: Rscript {0}
        run: rhino::build_js()

      - name: Build Sass
        if: always()
        shell: Rscript {0}
        run: rhino::build_sass()

      - name: Run R unit tests
        if: always()
        shell: Rscript {0}
        run: rhino::test_r()

